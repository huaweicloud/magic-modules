<% prefix = resource_name + titlelize(api.name) -%>
func send<%= stage -%><%= prefix -%>Request(d *schema.ResourceData, opts map[string]interface{},
    arrayIndex map[string]int, client *golangsdk.ServiceClient) (interface{}, error) {
<% if api.path.include?("{") -%>
    url, err := replaceVars(d, "<%= api.path -%>", nil)
    if err != nil {
        return nil, err
    }
    url = client.ServiceURL(url)
<% else -%>
    url := client.ServiceURL(<%= sprintf("\"%s\"", api.path) -%>)
<% end -%>

    params, err := build<%= stage -%><%= prefix -%>Parameters(opts, arrayIndex)
    if err != nil {
        return nil, fmt.Errorf("Error building the request body of api(<%= api.name -%>)")
    }

    r := golangsdk.Result{}
    _, r.Err = client.<%= api.verb.capitalize -%>(url, params, &r.Body, &golangsdk.RequestOpts{
        OkCodes: successHTTPCodes,
    })
    if r.Err != nil {
        return nil, fmt.Errorf("Error run api(<%= api.name -%>): %s", r.Err)
    }
    return r.Body, nil
}
