<% prefix = resource_name + titlelize(api.name) -%>
func send<%= prefix -%>Request(d *schema.ResourceData, params interface{},
    client *golangsdk.ServiceClient) (interface{}, error) {
<% if api.path.include?("{") -%>
    url, err := replaceVars(d, "<%= api.path -%>", nil)
    if err != nil {
        return nil, err
    }
    url = client.ServiceURL(url)
<% else -%>
    url := client.ServiceURL(<%= sprintf("\"%s\"", api.path) -%>)
<% end -%>

    r := golangsdk.Result{}
    _, r.Err = client.<%= api.verb.capitalize -%>(url, params, <%= api.has_response ? "&r.Body" : "nil" %>, &golangsdk.RequestOpts{
        OkCodes: successHTTPCodes,
        <% unless api.header_params.nil? -%>
        MoreHeaders: map[string]string{
          <% api.header_params.each do |k, v| -%>
            <%= sprintf("\"%s\": \"%s\",", k, v)%>
          <% end -%>
        },
        <% end -%>
    })
    if r.Err != nil {
        return nil, fmt.Errorf("Error running api(<%= api.name -%>), err=%s", r.Err)
    }
    return r.Body, nil
}
