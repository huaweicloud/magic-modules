<%
   new_prefix = sprintf("%s%s%s", prefix, prefix.empty? ? "" : "_", property.out_name)
   func_def = sprintf("fill_%s(value):", new_prefix)
-%>
<% if property.is_a?(Api::Type::Array) && property.item_type.is_a?(Api::Type::NestedObject) -%>


def <%= func_def %>
    for item in value:
<%   nested_properties = nested_properties(property) -%>
<%   nested_properties.each do |prop| -%>

<%= fill_resp_parameter(prop, new_prefix, "item", 8) %>
<%   end -%>
<%   nested_properties.each do |prop| -%>
<%= lines(build_fill_param_method(new_prefix, prop)) -%>
<%   end -%>
<% elsif property.is_a?(Api::Type::NestedObject) -%>


def <%= func_def %>
<%   nested_properties = nested_properties(property) -%>
<%   nested_properties.each do |prop| -%>

<%= fill_resp_parameter(prop, new_prefix, "value", 4) %>
<%   end -%>
<%   nested_properties.each do |prop| -%>
<%= lines(build_fill_param_method(new_prefix, prop)) -%>
<%   end -%>
<% end # if property.is_a?(Api::Type::Array) -%>
